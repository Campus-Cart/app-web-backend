{"$message_type":"diagnostic","message":"the value of the associated types `Error`, `TlsConnect` and `Stream` in `MakeTlsConnect` must be specified","code":{"code":"E0191","explanation":"An associated type wasn't specified for a trait object.\n\nErroneous code example:\n\n```compile_fail,E0191\ntrait Trait {\n    type Bar;\n}\n\ntype Foo = dyn Trait; // error: the value of the associated type `Bar` (from\n                      //        the trait `Trait`) must be specified\n```\n\nTrait objects need to have all associated types specified. Please verify that\nall associated types of the trait were specified and the correct trait was used.\nExample:\n\n```\ntrait Trait {\n    type Bar;\n}\n\ntype Foo = dyn Trait<Bar=i32>; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/server.rs","byte_start":494,"byte_end":508,"line_start":16,"line_end":16,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"    let tls_connector = MakeTlsConnect::new(connector);","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"specify the associated types","code":null,"level":"help","spans":[{"file_name":"src/server.rs","byte_start":494,"byte_end":508,"line_start":16,"line_end":16,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"    let tls_connector = MakeTlsConnect::new(connector);","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":"MakeTlsConnect<Stream = Type, TlsConnect = Type, Error = Type>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0191]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the value of the associated types `Error`, `TlsConnect` and `Stream` in `MakeTlsConnect` must be specified\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/server.rs:16:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let tls_connector = MakeTlsConnect::new(connector);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: specify the associated types: `MakeTlsConnect<Stream = Type, TlsConnect = Type, Error = Type>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"trait objects must include the `dyn` keyword","code":{"code":"E0782","explanation":"Trait objects must include the `dyn` keyword.\n\nErroneous code example:\n\n```edition2021,compile_fail,E0782\ntrait Foo {}\nfn test(arg: Box<Foo>) {} // error!\n```\n\nTrait objects are a way to call methods on types that are not known until\nruntime but conform to some trait.\n\nTrait objects should be formed with `Box<dyn Foo>`, but in the code above\n`dyn` is left off.\n\nThis makes it harder to see that `arg` is a trait object and not a\nsimply a heap allocated type called `Foo`.\n\nTo fix this issue, add `dyn` before the trait name.\n\n```edition2021\ntrait Foo {}\nfn test(arg: Box<dyn Foo>) {} // ok!\n```\n\nThis used to be allowed before edition 2021, but is now an error.\n"},"level":"error","spans":[{"file_name":"src/server.rs","byte_start":494,"byte_end":508,"line_start":16,"line_end":16,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"    let tls_connector = MakeTlsConnect::new(connector);","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `dyn` keyword before this trait","code":null,"level":"help","spans":[{"file_name":"src/server.rs","byte_start":494,"byte_end":494,"line_start":16,"line_end":16,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    let tls_connector = MakeTlsConnect::new(connector);","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"<dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/server.rs","byte_start":508,"byte_end":508,"line_start":16,"line_end":16,"column_start":39,"column_end":39,"is_primary":true,"text":[{"text":"    let tls_connector = MakeTlsConnect::new(connector);","highlight_start":39,"highlight_end":39}],"label":null,"suggested_replacement":">","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0782]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trait objects must include the `dyn` keyword\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/server.rs:16:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let tls_connector = MakeTlsConnect::new(connector);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add `dyn` keyword before this trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let tls_connector = \u001b[0m\u001b[0m\u001b[38;5;10m<dyn \u001b[0m\u001b[0mMakeTlsConnect\u001b[0m\u001b[0m\u001b[38;5;10m>\u001b[0m\u001b[0m::new(connector);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `new` found for trait `MakeTlsConnect<_>`","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/server.rs","byte_start":510,"byte_end":513,"line_start":16,"line_end":16,"column_start":41,"column_end":44,"is_primary":true,"text":[{"text":"    let tls_connector = MakeTlsConnect::new(connector);","highlight_start":41,"highlight_end":44}],"label":"function or associated item not found in `MakeTlsConnect<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no function or associated item named `new` found for trait `MakeTlsConnect<_>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/server.rs:16:41\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let tls_connector = MakeTlsConnect::new(connector);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item not found in `MakeTlsConnect<_>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 3 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0191, E0599, E0782.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0191, E0599, E0782.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0191`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0191`.\u001b[0m\n"}
